
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;

public class ClientGUI {
    private ClientSock client;
    private JFrame frame;
    private JTable table;
    private DefaultTableModel tableModel;

    public ClientGUI(ClientSock client) {
        this.client = client;
        this.frame = new JFrame("Library Management System");
        this.tableModel = new DefaultTableModel(new String[]{"ID", "Title", "Author", "Price", "Student ID"}, 0);
        this.table = new JTable(tableModel);
    }

    public void showGUI() {
        JButton refreshButton = new JButton("Refresh");
        refreshButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                refreshTable();
            }
        });

        JButton addButton = new JButton("Add Book");
        addButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                showAddBookDialog();
            }
        });

        JButton borrowButton = new JButton("Borrow Book");
        borrowButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                showBorrowBookDialog();
            }
        });

        JButton returnButton = new JButton("Return Book");
        returnButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                showReturnBookDialog();
            }
        });

        JPanel buttonPanel = new JPanel(new FlowLayout(FlowLayout.CENTER));
        buttonPanel.setBackground(new Color(230, 230, 250));
        buttonPanel.add(refreshButton);
        buttonPanel.add(addButton);
        buttonPanel.add(borrowButton);
        buttonPanel.add(returnButton);

        JScrollPane scrollPane = new JScrollPane(table);
        scrollPane.setBorder(BorderFactory.createEmptyBorder());

        frame.setLayout(new BorderLayout());
        frame.add(buttonPanel, BorderLayout.NORTH);
        frame.add(scrollPane, BorderLayout.CENTER);

        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setSize(800, 600);
        frame.setLocationRelativeTo(null); // Center the frame on the screen
        frame.setVisible(true);
    }

    private void refreshTable() {
        ArrayList<Product> books = client.getAllBooks();
        updateTable(books);
    }

    public void updateTable(ArrayList<Product> books) {
        // Clear the existing data in the table
        tableModel.setRowCount(0);

        // Populate the table with the new data
        for (Product book : books) {
            Object[] rowData = {book.getId(), book.getTitle(), book.getAuthor(), book.getPrice(), book.getStudentId()};
            tableModel.addRow(rowData);
        }
    }

    private void showAddBookDialog() {
        JTextField titleField = new JTextField();
        JTextField authorField = new JTextField();
        JTextField priceField = new JTextField();

        JPanel panel = new JPanel(new GridLayout(0, 1));
        panel.add(new JLabel("Title:"));
        panel.add(titleField);
        panel.add(new JLabel("Author:"));
        panel.add(authorField);
        panel.add(new JLabel("Price:"));
        panel.add(priceField);

        int result = JOptionPane.showConfirmDialog(null, panel, "Add Book",
                JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE);

        if (result == JOptionPane.OK_OPTION) {
            // Get values from the text fields
            String title = titleField.getText();
            String author = authorField.getText();
            double price = Double.parseDouble(priceField.getText());

            // Create a new Product object and add it to the server
            Product newBook = new Product(0, title, author, price, -1); // ID is set to 0 as it's usually generated by the database
            client.addBook(newBook);

            // Refresh the table to reflect the changes
            refreshTable();
        }
    }

    private void showBorrowBookDialog() {
        JTextField bookIdField = new JTextField();
        JTextField studentIdField = new JTextField();

        JPanel panel = new JPanel(new GridLayout(0, 1));
        panel.add(new JLabel("Book ID:"));
        panel.add(bookIdField);
        panel.add(new JLabel("Student ID:"));
        panel.add(studentIdField);

        int result = JOptionPane.showConfirmDialog(null, panel, "Borrow Book",
                JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE);

        if (result == JOptionPane.OK_OPTION) {
            // Get values from the text fields
            int bookId = Integer.parseInt(bookIdField.getText());
            int studentId = Integer.parseInt(studentIdField.getText());

            // Send a request to the server to associate the student with the book
            client.borrowBook(studentId, bookId);

            // Refresh the table to reflect the changes
            refreshTable();
        }
    }

    private void showReturnBookDialog() {
        JTextField bookIdField = new JTextField();

        JPanel panel = new JPanel(new GridLayout(0, 1));
        panel.add(new JLabel("Book ID:"));
        panel.add(bookIdField);

        int result = JOptionPane.showConfirmDialog(null, panel, "Return Book",
                JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE);

        if (result == JOptionPane.OK_OPTION) {

            int bookId = Integer.parseInt(bookIdField.getText());

            // Send a request to the server to disassociate the student from the book
            client.returnBook(bookId);

            // Refresh the table to reflect the changes
            refreshTable();
        }
    }

    public static void main(String[] args) {
        // Example usage:
        ClientSock client = new ClientSock("localhost", 6666);
        ClientGUI gui = new ClientGUI(client);
        gui.showGUI();
    }
}
